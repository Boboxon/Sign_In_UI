{"version":3,"sources":["Component/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","name","setName","password","setPassword","theme","setTheme","darkMode","createMuiTheme","palette","type","ThemeProvider","CssBaseline","Switch","onChange","value","className","required","e","target","placeholder","onClick","localStorage","setItem","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAwEeA,EA/DF,WACX,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAMMC,EAAWC,YAAe,CAC9BC,QAAS,CACPC,KAAML,EAAQ,OAAS,WAO3B,OACE,cAACM,EAAA,EAAD,CAAeN,MAAOE,EAAtB,SACE,eAACK,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,SANK,WACjBR,GAAUD,IAKwBU,MAAOV,IACrC,sBAAKW,UAAU,YAAf,UACE,+CACA,uEACA,sBAAKA,UAAU,cAAf,UACE,uCACA,sBAAKA,UAAU,OAAf,UACE,uBACEA,UAAU,QACVD,MAAOd,EACPS,KAAK,OACLO,UAAQ,EACRH,SAAU,SAACI,GAAD,OAAOhB,EAAQgB,EAAEC,OAAOJ,QAClCK,YAAY,aAEd,uBACEJ,UAAU,WACVD,MAAOZ,EACPO,KAAK,WACLO,UAAQ,EACRH,SAAU,SAACI,GAAD,OAAOd,EAAYc,EAAEC,OAAOJ,QACtCK,YAAY,eAGhB,uBACEC,QAzCS,WACnBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAU,CAAExB,OAAME,eAyC1Ca,UAAU,WACVN,KAAK,aAEP,+CACA,wBAAQM,UAAU,MAAlB,qBACA,mCClDGU,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCMSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.532fee71.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ThemeProvider,\r\n  CssBaseline,\r\n  Switch,\r\n  createMuiTheme,\r\n} from \"@material-ui/core\";\r\n// import { lightTheme, darkTheme, GlobalStyles } from \"./Theme\";\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [theme, setTheme] = useState(false);\r\n\r\n  const handleSubmit = () => {\r\n    localStorage.setItem(\"info\", JSON.stringify({ name, password }));\r\n  };\r\n\r\n  const darkMode = createMuiTheme({\r\n    palette: {\r\n      type: theme ? \"dark\" : \"light\",\r\n    },\r\n  });\r\n\r\n  const handleMode = () => {\r\n    setTheme(!theme);\r\n  };\r\n  return (\r\n    <ThemeProvider theme={darkMode}>\r\n      <CssBaseline>\r\n        <Switch onChange={handleMode} value={theme} />\r\n        <div className=\"main-card\">\r\n          <h4>Welocome Back</h4>\r\n          <span>We missed you! Login to get Started</span>\r\n          <div className=\"second-card\">\r\n            <h5>LOGIN</h5>\r\n            <div className=\"form\">\r\n              <input\r\n                className=\"email\"\r\n                value={name}\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"username\"\r\n              />\r\n              <input\r\n                className=\"password\"\r\n                value={password}\r\n                type=\"password\"\r\n                required\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"*******\"\r\n              />\r\n            </div>\r\n            <input\r\n              onClick={handleSubmit}\r\n              className=\"checkbox\"\r\n              type=\"checkbox\"\r\n            />\r\n            <span>Remember Me</span>\r\n            <button className=\"btn\">Sign In</button>\r\n            <br />\r\n            {/* <input onClick={() => handleMode()} type=\"checkbox\" />{\" \"} */}\r\n\r\n            {/* <span>Dark Mode</span> */}\r\n          </div>\r\n        </div>\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./App.css\";\nimport Form from \"./Component/Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}